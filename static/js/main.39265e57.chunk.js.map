{"version":3,"sources":["assets/photo-1472491235688-bdc81a63246e.jpg","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Routes/Collection/CollectionPresenter.js","Routes/Collection/index.js","Routes/Collection/CollectionContainer.js","Components/Router.js","Components/GlobalStyle.js","Components/App.js","index.js"],"names":["module","exports","Header","Styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","h3","Grid","Section","title","children","Text","color","Message","text","Image","bgUrl","Rating","span","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","HomePresenter","nowPlaying","upComing","popular","error","loading","Helmet","Loader","length","map","movie","key","poster_path","original_title","vote_average","release_date","substring","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","collectionId","tvApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","tv","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","searchTerm","handleSubmit","movieResults","tvResults","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","target","preventDefault","searchByTerm","a","Backdrop","bgImage","Content","Cover","Data","ItemContainer","Imdb","Divider","OverView","p","Video","CollectionContainer","CollectionPoster","collectionPoster","Collection","DetailPresenter","result","src","crossorigin","backdrop_path","runtime","episode_run_time","genres","genre","index","name","rel","href","imdb_id","className","overview","videos","belongs_to_collection","DetailContainer","match","push","history","includes","parsedId","parseInt","isNaN","console","log","CollectionPresenter","parts","exact","path","component","Home","TV","Search","Detail","from","GlobalStyle","createGlobalStyle","reset","App","Router","ReactDOM","render","document","getElementById"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,8D,s4BCI3C,IAAMC,EAASC,IAAOC,OAAV,KAeNC,EAAOF,IAAOG,GAAV,KAIJC,EAAOJ,IAAOK,GAAV,KAGmB,SAAAC,GAAK,OAAIA,EAAMC,QAAU,UAAY,iBAI5DC,EAAQR,YAAOS,IAAPT,CAAH,KASIU,eACb,gBAAeC,EAAf,EAAGC,SAAYD,SAAf,OACE,kBAACZ,EAAD,KACE,kBAACG,EAAD,KACE,kBAACE,EAAD,CAAMG,QAAoB,MAAXI,GACb,kBAACH,EAAD,CAAOK,GAAG,KAAV,SAEF,kBAACT,EAAD,CAAMG,QAAoB,QAAXI,GACb,kBAACH,EAAD,CAAOK,GAAG,OAAV,OAEF,kBAACT,EAAD,CAAMG,QAAoB,YAAXI,GACb,kBAACH,EAAD,CAAOK,GAAG,WAAV,gB,mcC9CV,IAAMC,EAAYd,IAAOe,IAAV,KAMTC,EAAQhB,IAAOiB,GAAV,KAKLC,EAAOlB,IAAOe,IAAV,KAsBKI,EAhBC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,kBAACP,EAAD,KACE,kBAACE,EAAD,KAAQI,GACR,kBAACF,EAAD,KAAOG,K,8KCrBX,IAAMP,EAAYd,IAAOe,IAAV,KAQA,oBACb,kBAAC,EAAD,KACE,2C,kQCRJ,IAAMD,EAAYd,IAAOe,IAAV,KAOTO,EAAOtB,IAAOiB,GAAV,KACC,SAAAX,GAAK,OAAIA,EAAMiB,SAgBXC,EAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMF,EAAT,EAASA,MAAT,OACd,kBAAC,EAAD,KACE,kBAACD,EAAD,CAAMC,MAAOA,GAAQE,K,s9BCfzB,IAAMX,EAAYd,IAAOe,IAAV,KAITW,EAAQ1B,IAAOe,IAAV,KACe,SAAAT,GAAK,OAAIA,EAAMqB,SAMnCC,EAAS5B,IAAO6B,KAAV,KASNC,EAAiB9B,IAAOe,IAAV,IAIdW,EAGAE,GAOAZ,EAAQhB,IAAOiB,GAAV,KAQLc,EAAO/B,IAAO6B,KAAV,KAiCKG,GA5BA,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,SAAUd,EAAjB,EAAiBA,MAAOe,EAAxB,EAAwBA,OAAQC,EAAhC,EAAgCA,KAAhC,IAAsCC,eAAtC,gBACb,kBAAC,IAAD,CAAMxB,GAAIwB,EAAO,iBAAaJ,GAAb,cAA2BA,IAC1C,kBAAC,EAAD,KACE,kBAACH,EAAD,KACE,kBAACJ,EAAD,CACEC,MACEO,EAAQ,yCAC8BA,GAClCI,EAAQ,MAGhB,kBAACV,EAAD,KAASO,EAAT,UAEF,kBAAC,EAAD,KAAQf,GACR,kBAACW,EAAD,KAAOK,M,mGCzDb,IAAMtB,GAAYd,IAAOe,IAAV,MA6EAwB,GAzEO,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,QAASC,EAAlC,EAAkCA,MAAOC,EAAzC,EAAyCA,QAAzC,OACpB,oCACE,kBAACC,GAAA,EAAD,KACE,oDAEDD,EACG,kBAACE,EAAD,MACC,kBAAC,GAAD,KACAN,GAAcA,EAAWO,OAAS,GACjC,kBAAC,EAAD,CAAS3B,MAAM,cACZoB,EAAWQ,KAAI,SAAAC,GAAK,OACnB,kBAAC,GAAD,CACEC,IAAKD,EAAMhB,GACXA,GAAIgB,EAAMhB,GACVC,SAAUe,EAAME,YAChB/B,MAAO6B,EAAMG,eACbjB,OAAQc,EAAMI,aACdjB,KAAMa,EAAMK,cAAgBL,EAAMK,aAAaC,UAAU,EAAG,GAC5DlB,SAAS,QAMhBK,GAAWA,EAAQK,OAAS,GAC3B,kBAAC,EAAD,CAAS3B,MAAM,WACZsB,EAAQM,KAAI,SAAAC,GAAK,OAChB,kBAAC,GAAD,CACEC,IAAKD,EAAMhB,GACXA,GAAIgB,EAAMhB,GACVC,SAAUe,EAAME,YAChB/B,MAAO6B,EAAMG,eACbjB,OAAQc,EAAMI,aACdjB,KAAMa,EAAMK,cAAgBL,EAAMK,aAAaC,UAAU,EAAG,GAC5DlB,SAAS,QAMhBI,GAAYA,EAASM,OAAS,GAC7B,kBAAC,EAAD,CAAS3B,MAAM,YACZqB,EAASO,KAAI,SAAAC,GAAK,OACjB,kBAAC,GAAD,CACEC,IAAKD,EAAMhB,GACXA,GAAIgB,EAAMhB,GACVC,SAAUe,EAAME,YAChB/B,MAAO6B,EAAMG,eACbjB,OAAQc,EAAMI,aACdjB,KAAMa,EAAMK,cAAgBL,EAAMK,aAAaC,UAAU,EAAG,GAC5DlB,SAAS,QAMhBM,GAAS,kBAAC,EAAD,CAASlB,KAAK,cAAcF,MAAM,e,SClE9CiC,G,QAAMC,EAAMC,OAAO,CACvBC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,GACC,kBAAMP,GAAIQ,IAAI,sBADfD,GAED,kBAAMP,GAAIQ,IAAI,mBAFbD,GAGF,kBAAMP,GAAIQ,IAAI,kBAHZD,GAIE,SAAC9B,GAAD,OAAQuB,GAAIQ,IAAJ,gBAAiB/B,GAAM,CAC1C2B,OAAQ,CACNK,mBAAoB,aANbF,GASH,SAACG,GAAD,OAAUV,GAAIQ,IAAI,eAAgB,CACxCJ,OAAQ,CACNO,MAAOC,mBAAmBF,OAXnBH,GAcC,SAACM,GAAD,OAAkBb,GAAIQ,IAAJ,qBAAsBK,KAGzCC,GACD,kBAAMd,GAAIQ,IAAI,iBADbM,GAEF,kBAAMd,GAAIQ,IAAI,eAFZM,GAGE,kBAAMd,GAAIQ,IAAI,oBAHhBM,GAIC,SAACrC,GAAD,OAAQuB,GAAIQ,IAAJ,aAAc/B,GAAM,CACtC2B,OAAQ,CACNK,mBAAmB,aANZK,GASH,SAACJ,GAAD,OAAUV,GAAIQ,IAAI,YAAa,CACrCJ,OAAQ,CACNO,MAAOC,mBAAmBF,OCrCjBK,G,4MCGbC,MAAQ,CACNhC,WAAY,KACZC,SAAU,KACVC,QAAS,KACTC,MAAO,KACPC,SAAS,G,qNAOGmB,K,uBADSvB,E,EAAjBiC,KAAQC,Q,SAIAX,K,uBADStB,E,EAAjBgC,KAAQC,Q,UAIAX,K,iBADSrB,E,EAAjB+B,KAAQC,QAEVC,KAAKC,SAAS,CACZpC,aACAC,WACAC,Y,kDAGFiC,KAAKC,SAAS,CAAEjC,MAAO,iC,yBAEvBgC,KAAKC,SAAS,CAAEhC,SAAS,I,kKAInB,IAAD,EACmD+B,KAAKH,MAAvDhC,EADD,EACCA,WAAYC,EADb,EACaA,SAAUC,EADvB,EACuBA,QAASC,EADhC,EACgCA,MAAOC,EADvC,EACuCA,QAC9C,OAAO,kBAAC,GAAD,CACLJ,WAAYA,EACZC,SAAUA,EACVC,QAASA,EACTC,MAAOA,EACPC,QAASA,Q,GAvCciC,IAAMC,W,2FCKnC,IAAMhE,GAAYd,IAAOe,IAAV,MAqEAgE,GAjEK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUtC,EAAb,EAAaA,QAASuC,EAAtB,EAAsBA,YAAatC,EAAnC,EAAmCA,MAAOC,EAA1C,EAA0CA,QAA1C,OACpB,oCACE,kBAACC,GAAA,EAAD,KACE,gDAEDD,EAAU,kBAACE,EAAD,MACT,kBAAC,GAAD,KACGkC,GAAYA,EAASjC,OAAS,GAC7B,kBAAC,EAAD,CAAS3B,MAAM,YACZ4D,EAAShC,KAAI,SAAAkC,GAAE,OACd,kBAAC,GAAD,CACEhC,IAAKgC,EAAGjD,GACRA,GAAIiD,EAAGjD,GACPC,SAAUgD,EAAG/B,YACb/B,MAAO8D,EAAGC,cACVhD,OAAQ+C,EAAG7B,aACXjB,KAAM8C,EAAGE,gBAAkBF,EAAGE,eAAe7B,UAAU,EAAG,SAKjEb,GAAWA,EAAQK,OAAS,GAC3B,kBAAC,EAAD,CAAS3B,MAAM,WACZsB,EAAQM,KAAI,SAAAkC,GAAE,OACb,kBAAC,GAAD,CACEhC,IAAKgC,EAAGjD,GACRA,GAAIiD,EAAGjD,GACPC,SAAUgD,EAAG/B,YACb/B,MAAO8D,EAAGC,cACVhD,OAAQ+C,EAAG7B,aACXjB,KAAM8C,EAAGE,gBAAkBF,EAAGE,eAAe7B,UAAU,EAAG,SAKjE0B,GAAeA,EAAYlC,OAAS,GACnC,kBAAC,EAAD,CAAS3B,MAAM,gBACZ6D,EAAYjC,KAAI,SAAAkC,GAAE,OACjB,kBAAC,GAAD,CACEhC,IAAKgC,EAAGjD,GACRA,GAAIiD,EAAGjD,GACPC,SAAUgD,EAAG/B,YACb/B,MAAO8D,EAAGC,cACVhD,OAAQ+C,EAAG7B,aACXjB,KAAM8C,EAAGE,gBAAkBF,EAAGE,eAAe7B,UAAU,EAAG,SAKjEZ,GAAS,kBAAC,EAAD,CAASlB,KAAK,cAAcF,MAAM,eC5DnC8D,G,4MCGbb,MAAQ,CACNQ,SAAU,KACVtC,QAAS,KACTuC,YAAa,KACbtC,MAAO,KACPC,SAAS,G,qNAOG0B,K,uBADSU,E,EAAjBP,KAAQC,Q,SAKEJ,K,uBADS5B,E,EAAjB+B,KAAQC,Q,UAIFJ,K,iBADSW,E,EAAjBR,KAAQC,QAEVC,KAAKC,SAAS,CACZI,WACAtC,UACAuC,gB,kDAGFN,KAAKC,SAAS,CACZjC,MAAO,8B,yBAGTgC,KAAKC,SAAS,CACZhC,SAAS,I,kKAKL,IAAD,EACoD+B,KAAKH,MAAxDQ,EADD,EACCA,SAAUtC,EADX,EACWA,QAASuC,EADpB,EACoBA,YAAatC,EADjC,EACiCA,MAAOC,EADxC,EACwCA,QAC/C,OACE,kBAAC,GAAD,CACEoC,SAAUA,EACVtC,QAASA,EACTuC,YAAaA,EACbtC,MAAOA,EACPC,QAASA,Q,GA7CYiC,IAAMC,W,0UCKnC,IAAMhE,GAAYd,IAAOe,IAAV,MAITuE,GAAOtF,IAAOuF,KAAV,MAKJC,GAAQxF,IAAOyF,MAAV,MA+DIC,GAzDS,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,aAAcC,EAA3C,EAA2CA,UAAWnD,EAAtD,EAAsDA,MAAOC,EAA7D,EAA6DA,QAASmD,EAAtE,EAAsEA,WAAtE,OACtB,kBAAC,GAAD,KACE,kBAAClD,GAAA,EAAD,KACE,oDAEF,kBAACyC,GAAD,CAAMU,SAAUJ,GACd,kBAACJ,GAAD,CAAOS,YAAY,2BAA2BC,MAAOP,EAAYQ,SAAUJ,KAE5EnD,EAAU,kBAACE,EAAD,MACT,oCACG+C,GAAgBA,EAAa9C,OAAS,GACrC,kBAAC,EAAD,CAAS3B,MAAM,iBACZyE,EAAa7C,KAAI,SAAAC,GAAK,OACrB,kBAAC,GAAD,CACEC,IAAKD,EAAMhB,GACXA,GAAIgB,EAAMhB,GACVC,SAAUe,EAAME,YAChB/B,MAAO6B,EAAMG,eACbjB,OAAQc,EAAMI,aACdjB,KAAMa,EAAMK,cAAgBL,EAAMK,aAAaC,UAAU,EAAG,GAC5DlB,SAAS,QAKhByD,GAAaA,EAAU/C,OAAS,GAC/B,kBAAC,EAAD,CAAS3B,MAAM,mBACZ0E,EAAU9C,KAAI,SAAAkC,GAAE,OACf,kBAAC,GAAD,CACEhC,IAAKgC,EAAGjD,GACRA,GAAIiD,EAAGjD,GACPC,SAAUgD,EAAG/B,YACb/B,MAAO8D,EAAGC,cACVhD,OAAQ+C,EAAG7B,aACXjB,KAAM8C,EAAGE,gBAAkBF,EAAGE,eAAe7B,UAAU,EAAG,SAKjEZ,GAAS,kBAAC,EAAD,CAASlB,KAAK,QAAQF,MAAM,WACrCsE,GAAgBC,GAAqC,IAAxBD,EAAa9C,QAAqC,IAArB+C,EAAU/C,QACnE,kBAAC,EAAD,CAAStB,KAAK,gBAAgBF,MAAM,eC/D/B6E,G,4MCGb5B,MAAQ,CACNqB,aAAc,KACdC,UAAW,KACXlD,SAAS,EACTD,MAAO,KACPgD,WAAY,I,EAGdI,WAAa,SAAAM,GAAU,IAElBH,EAAUG,EADLC,OACLJ,MACD,EAAKtB,SAAS,CACZe,WAAYO,K,EAIlBN,aAAe,SAACS,GACdA,EAAME,iBAEa,KADI,EAAK/B,MAApBmB,YAEN,EAAKa,gB,EAITA,a,sBAAe,oCAAAC,EAAA,6DACb,EAAK7B,SAAS,CAAChC,SAAS,IAChB+C,EAAe,EAAKnB,MAApBmB,WAFK,kBAMD5B,GAAiB4B,GANhB,uBAKQE,EALR,EAKTpB,KAAQC,QALC,SASDJ,GAAaqB,GATZ,gBAQQG,EARR,EAQTrB,KAAQC,QAEV,EAAKE,SAAS,CACZiB,eACAC,cAZS,kDAeX,EAAKlB,SAAS,CACZjC,MAAO,wBAhBE,yBAmBX,EAAKiC,SAAS,CACZhC,SAAS,IApBA,6E,uDAyBL,IAAD,EACyD+B,KAAKH,MAA7DqB,EADD,EACCA,aAAcC,EADf,EACeA,UAAWlD,EAD1B,EAC0BA,QAASD,EADnC,EACmCA,MAAOgD,EAD1C,EAC0CA,WACjD,OAAO,kBAAC,GAAD,CACLE,aAAcA,EACdC,UAAWA,EACXlD,QAASA,EACTD,MAAOA,EACPgD,WAAYA,EACZC,aAAcjB,KAAKiB,aACnBG,WAAYpB,KAAKoB,iB,GA3DMlB,IAAMC,W,yoECGnC,IAAMhE,GAAYd,IAAOe,IAAV,MAMT2F,GAAW1G,IAAOe,IAAV,MAMY,SAAAT,GAAK,OAAIA,EAAMqG,WAQnCC,GAAU5G,IAAOe,IAAV,MAOP8F,GAAQ7G,IAAOe,IAAV,MACc,SAAAT,GAAK,OAAIA,EAAMqG,WAQlCG,GAAO9G,IAAOe,IAAV,MAMJC,GAAQhB,IAAOiB,GAAV,MAKL8F,GAAgB/G,IAAOe,IAAV,MAIbX,GAAOJ,IAAO6B,KAAV,MAIJmF,GAAOhH,IAAOyG,EAAV,MAGJQ,GAAUjH,IAAO6B,KAAV,MAIPqF,GAAWlH,IAAOmH,EAAV,MAQRC,GAAQpH,IAAOyG,EAAV,MASLY,GAAsBrH,IAAOe,IAAV,MAKnBuG,GAAmBtH,IAAOe,IAAV,MACI,SAAAT,GAAK,OAAIA,EAAMiH,oBAOnCC,GAAaxH,IAAOiB,GAAV,MAsGDwG,GAhGS,SAAC,GAAD,IAAG7E,EAAH,EAAGA,QAAS8E,EAAZ,EAAYA,OAAZ,EAAoB/E,MAApB,OACtBC,EACE,oCACE,kBAACC,GAAA,EAAD,KAAQ,2CACR,kBAACC,EAAD,OAGA,kBAAC,GAAD,KACE,kBAACD,GAAA,EAAD,KACE,+BACG6E,EAAOtE,eACJsE,EAAOtE,eACPsE,EAAOvC,eAEb,4BAAQwC,IAAI,4CAA4CC,YAAY,eAEtE,kBAAClB,GAAD,CACEC,QAAO,6CAAwCe,EAAOG,iBAExD,kBAACjB,GAAD,KACE,kBAACC,GAAD,CAAOF,QACLe,EAAOvE,YAAP,6CAC0CuE,EAAOvE,aAC7Cb,EAAQ,MAGd,kBAACwE,GAAD,KACE,kBAAC,GAAD,KACGY,EAAOtE,eACJsE,EAAOtE,eACPsE,EAAOvC,eAEb,kBAAC4B,GAAD,KACE,kBAAC,GAAD,KACGW,EAAOpE,aACJoE,EAAOpE,aAAaC,UAAU,EAAG,GACjCmE,EAAOtC,eAAe7B,UAAU,EAAG,IAEzC,kBAAC0D,GAAD,UACA,kBAAC,GAAD,KACGS,EAAOI,QAAUJ,EAAOI,QAAUJ,EAAOK,iBAAiB,GAD7D,OAGA,kBAACd,GAAD,UACA,kBAAC,GAAD,KACGS,EAAOM,QACNN,EAAOM,OAAOhF,KAAI,SAACiF,EAAOC,GAAR,OAChBA,IAAUR,EAAOM,OAAOjF,OAAS,EAC7BkF,EAAME,KADV,UAEOF,EAAME,KAFb,WAMN,kBAAClB,GAAD,UACA,kBAACD,GAAD,CACEV,OAAO,SAAS8B,IAAI,sBACpBC,KAAMX,EAAOY,SAAP,qCAAgDZ,EAAOY,UAE7D,uBAAGC,UAAU,iBAJf,UAOF,kBAACrB,GAAD,KACGQ,EAAOc,UAEV,kBAACpB,GAAD,CACEd,OAAO,SACP+B,KACEX,EAAOe,QAAP,0CACmCf,EAAOe,OAAO/D,QAAQ,GAAGxB,MAE7DwE,EAAOe,OAAS,oBAAsB,MAGxCf,EAAOgB,sBACJ,kBAACrB,GAAD,KACA,kBAACG,GAAD,KACGE,EAAOgB,uBAAP,UAAmChB,EAAOgB,sBAAsBP,KAAhE,MAEH,kBAAC,IAAD,CAAMtH,GAAE,sBAAiB6G,EAAOgB,sBAAsBzG,KACpD,kBAACqF,GAAD,CACEC,iBAAgB,yCAAoCG,EAAOgB,sBAAsBvF,iBAKrF,SC3LDwF,G,4MCGbnE,MAAQ,CACN5B,SAAS,EACT8E,OAAQ,KACR/E,MAAO,M,qMAUHgC,KAAKrE,MAJK2B,E,EADZ2G,MACEhF,OAAU3B,GAED4G,E,EAAXC,QAAWD,KACClI,E,EAAZC,SAAYD,SAEdgE,KAAKtC,QAAU1B,EAASoI,SAAS,WAC3BC,EAAWC,SAAShH,GACtBiH,MAAMF,IACRH,EAAK,KAEHnB,EAAS,K,UAEP/C,KAAKtC,Q,iCACmB0B,GAAsBiF,G,gBAAvCtB,E,EAANjD,K,yCAEuBH,GAAiB0E,G,iBAAlCtB,E,EAANjD,K,0DAGLE,KAAKC,SAAS,CACZjC,MAAO,+B,yBAGTgC,KAAKC,SAAS,CAAEhC,SAAS,EAAO8E,W,kKAI1B,IAAD,EAC4B/C,KAAKH,MAAhC5B,EADD,EACCA,QAAS8E,EADV,EACUA,OAAQ/E,EADlB,EACkBA,MAEzB,OADAwG,QAAQC,IAAI1B,GAEV,kBAAC,GAAD,CACE9E,QAASA,EACT8E,OAAQA,EACR/E,MAAOA,Q,GA3CckC,IAAMC,W,kuBCGnC,IAAMpD,GAAQ1B,IAAOe,IAAV,MACe,SAAAT,GAAK,OAAIA,EAAM4B,YAMnClB,GAAQhB,IAAOiB,GAAV,MAMLH,GAAYd,IAAOe,IAAV,MAUT6F,GAAU5G,IAAOe,IAAV,MAsCEsI,GA5Ba,SAAC,GAAD,IAAGzG,EAAH,EAAGA,QAASD,EAAZ,EAAYA,MAAO+E,EAAnB,EAAmBA,OAAnB,OAC1B,oCACE,kBAAC7E,GAAA,EAAD,KACE,8CAEDD,EACG,kBAACE,EAAD,MAEA,kBAAC,GAAD,CAAWC,OAAQ2E,EAAO3E,QACxB,kBAACF,GAAA,EAAD,KACE,+BAAQ6E,EAAO1E,KAAI,SAAAyB,GAAI,OACrBA,EAAKrB,oBAGRsE,EAAO1E,KAAI,SAAAyB,GAAI,OACd,kBAAC,GAAD,CAASvB,IAAKuB,EAAKxC,IACjB,kBAAC,GAAD,KAAQwC,EAAKrB,gBACb,kBAAC,GAAD,CACElB,SAAUuC,EAAKtB,aAAL,yCAAsDsB,EAAKtB,mBAI1ER,GAAS,kBAAC,EAAD,CAASlB,KAAK,4BAA4BF,MAAM,eC5DrD8F,G,4MCGb7C,MAAQ,CACN5B,SAAS,EACTD,MAAO,KACP+E,OAAQ,M,qMASJ/C,KAAKrE,MAHK+D,E,EADZuE,MACEhF,OAAUS,aAEDwE,E,EAAXC,QAAWD,KAEPG,EAAWC,SAAS5E,GACtB6E,MAAMF,IACRH,EAAK,K,kBAGqC9E,GAAqBiF,G,gBAAxCtB,E,EAAfjD,KAAQ6E,MAChB3E,KAAKC,SAAS,CAAE8C,W,kDAEhB/C,KAAKC,SAAS,CAAEjC,MAAO,+B,yBAEvBgC,KAAKC,SAAS,CACZhC,SAAS,I,kKAKL,IAAD,EAC4B+B,KAAKH,MAAhC5B,EADD,EACCA,QAASD,EADV,EACUA,MAAO+E,EADjB,EACiBA,OACxB,OACE,kBAAC,GAAD,CACE9E,QAASA,EACTD,MAAOA,EACP+E,OAAQA,Q,GApCa7C,IAAMC,WCMpB,qBACb,kBAAC,IAAD,KACE,oCACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyE,OAAK,EAACC,KAAK,IAAIC,UAAWC,KACjC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,MAAMC,UAAWE,KACnC,kBAAC,IAAD,CAAOH,KAAK,UAAUC,UAAWG,KACjC,kBAAC,IAAD,CAAOJ,KAAK,aAAaC,UAAWI,KACpC,kBAAC,IAAD,CAAOL,KAAK,UAAUC,UAAWI,KACjC,kBAAC,IAAD,CAAOL,KAAK,4BAA4BC,UAAWjC,KACnD,kBAAC,IAAD,CAAUsC,KAAK,IAAIjJ,GAAG,U,0TClB9B,IAiBekJ,GAjBKC,YAAH,KACbC,MCSWC,OATf,WACE,OACE,oCACE,kBAAC,GAAD,MACA,kBAACC,GAAD,QCHNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.39265e57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/photo-1472491235688-bdc81a63246e.45dabf46.jpg\";","import React from \"react\";\r\nimport Styled from \"styled-components\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nconst Header = Styled.header`\r\n  width: 100%;\r\n  height: 50px;\r\n  position: fixed;\r\n  top:0;\r\n  left:0;\r\n  background-color: rgba(20,20,20,0.8);\r\n  color:white;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n  z-index: 10;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n`;\r\n\r\nconst List = Styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = Styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  border-bottom: 5px solid ${props => props.current ? \"#2980b9\" : \"transparent\"};\r\n  transition: border-bottom 500ms ease-in-out;\r\n`;\r\n\r\nconst SLink = Styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\n\r\n\r\nexport default withRouter(\r\n  ({ location: { pathname } }) => (\r\n    <Header>\r\n      <List>\r\n        <Item current={pathname===\"/\"}>\r\n          <SLink to=\"/\">Home</SLink>\r\n        </Item>\r\n        <Item current={pathname===\"/tv\"}>\r\n          <SLink to=\"/tv\">TV</SLink>\r\n        </Item>\r\n        <Item current={pathname===\"/search\"}>\r\n          <SLink to=\"/search\">Search</SLink>\r\n        </Item>\r\n      </List>\r\n    </Header>\r\n  ))","import React from \"react\";\r\nimport Styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Container = Styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = Styled.h3`\r\n  font-size : 20px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Grid = Styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, 125px);\r\n  gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n)\r\n\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\n\r\nexport default Section;","import React from \"react\";\r\nimport Styled from \"styled-components\";\r\n\r\nconst Container = Styled.div`\r\n  width: 100vw:\r\n  height : 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size : 30px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span>Loading</span>\r\n  </Container>\r\n);\r\n\r\n","import React from \"react\";\r\nimport Styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst Container = Styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Text = Styled.h3`\r\n  color: ${props => props.color};\r\n  font-size: 20px;\r\n`;\r\n\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text:PropTypes.string.isRequired,\r\n  color:PropTypes.string.isRequired\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport Styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = Styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = Styled.div`\r\n  background-image: url(${props => props.bgUrl});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 180px;\r\n`;\r\n\r\nconst Rating = Styled.span`\r\n  position: absolute;\r\n  bottom : 10px;\r\n  right: 10px;\r\n  color: white;\r\n  opacity: 0;\r\n  transition: opacity 300ms ease-in-out;\r\n  `;\r\n\r\nconst ImageContainer = Styled.div`\r\n  position: relative;\r\n  margin-bottom : 10px;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n  transition: opacity 300ms ease-in-out;\r\n`;\r\n\r\nconst Title = Styled.h3`\r\n  display: block;\r\n  font-size; 20px;\r\n  font-weight: 600;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\n\r\nconst Year = Styled.span`\r\n  color: #FFFFFF50;\r\n`;\r\n\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w500${imageUrl}`\r\n              : require(\"assets/photo-1472491235688-bdc81a63246e.jpg\")\r\n          }\r\n        />\r\n        <Rating>{rating} / 10</Rating>\r\n      </ImageContainer>\r\n      <Title>{title}</Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n)\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n}\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport Styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = Styled.div`\r\n  padding:20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upComing, popular, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Nexflix</title>\r\n    </Helmet>\r\n    {loading\r\n      ? <Loader />\r\n      : (<Container>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"nowPlaying\">\r\n            {nowPlaying.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            )\r\n            )}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"popular\">\r\n            {popular.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            )\r\n            )}\r\n          </Section>\r\n        )}\r\n        {upComing && upComing.length > 0 && (\r\n          <Section title=\"upComing\">\r\n            {upComing.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            )\r\n            )}\r\n          </Section>\r\n        )}\r\n        {error && <Message text=\"error found\" color=\"#c0392b\" />}\r\n      </Container>\r\n      )\r\n    }\r\n  </>\r\n)\r\n\r\n\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upComing: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n}\r\n\r\nexport default HomePresenter;","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n  params: {\r\n    api_key: \"e28e4a9aeb82fd7bf338906597afbb0e\",\r\n    language: \"en-US\"\r\n  }\r\n})\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upComing: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) => api.get(`movie/${id}`, {\r\n    params: {\r\n      append_to_response: \"videos\"\r\n    }\r\n  }),\r\n  search: (term) => api.get(\"search/movie\", {\r\n    params: {\r\n      query: encodeURIComponent(term)\r\n    }\r\n  }),\r\n  collection: (collectionId) => api.get(`collection/${collectionId}`)\r\n} \r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: (id) => api.get(`tv/${id}`, {\r\n    params: {\r\n      append_to_response:\"videos\"\r\n    }\r\n  }),\r\n  search: (term) => api.get(\"search/tv\", {\r\n    params: {\r\n      query: encodeURIComponent(term)\r\n    }\r\n  })\r\n}","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upComing: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying }\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upComing }\r\n      } = await moviesApi.upComing();\r\n      const {\r\n        data: { results: popular }\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upComing,\r\n        popular\r\n      })\r\n    } catch {\r\n      this.setState({ error: \"can't find movie information\" })\r\n    } finally {\r\n      this.setState({ loading: false })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upComing, popular, error, loading } = this.state;\r\n    return <HomePresenter\r\n      nowPlaying={nowPlaying}\r\n      upComing={upComing}\r\n      popular={popular}\r\n      error={error}\r\n      loading={loading}\r\n    />\r\n  }\r\n}","import React from \"react\";\r\nimport Styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\"\r\n\r\nconst Container = Styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) =>\r\n<>\r\n  <Helmet>\r\n    <title>TV | Nexflix</title>\r\n  </Helmet>\r\n  {loading ? <Loader /> : (\r\n    <Container>\r\n      {topRated && topRated.length > 0 && (\r\n        <Section title=\"TopRated\">\r\n          {topRated.map(tv => (\r\n            <Poster\r\n              key={tv.id}\r\n              id={tv.id}\r\n              imageUrl={tv.poster_path}\r\n              title={tv.original_name}\r\n              rating={tv.vote_average}\r\n              year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {popular && popular.length > 0 && (\r\n        <Section title=\"Popular\">\r\n          {popular.map(tv => (\r\n            <Poster\r\n              key={tv.id}\r\n              id={tv.id}\r\n              imageUrl={tv.poster_path}\r\n              title={tv.original_name}\r\n              rating={tv.vote_average}\r\n              year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {airingToday && airingToday.length > 0 && (\r\n        <Section title=\"Airing Today\">\r\n          {airingToday.map(tv => (\r\n            <Poster\r\n              key={tv.id}\r\n              id={tv.id}\r\n              imageUrl={tv.poster_path}\r\n              title={tv.original_name}\r\n              rating={tv.vote_average}\r\n              year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {error && <Message text=\"error found\" color=\"#c0392b\" />}\r\n    </Container>\r\n  )\r\n\r\n  }\r\n</>\r\n  \r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n}\r\n\r\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    error: null,\r\n    loading: true\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated }\r\n      } = await tvApi.topRated()\r\n      const\r\n        {\r\n          data: { results: popular }\r\n        } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday }\r\n      } = await tvApi.airingToday();\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday\r\n      })\r\n    } catch {\r\n      this.setState({\r\n        error: \"can't find tv information\"\r\n      })\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, error, loading } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport Styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport Loader from \"Components/Loader\"\r\nimport Message from \"Components/Message\"\r\nimport Section from \"Components/Section\"\r\nimport Poster from \"Components/Poster\"\r\nimport Helmet from \"react-helmet\"\r\n\r\nconst Container = Styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = Styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n  `;\r\n\r\nconst Input = Styled.input`\r\n  all: unset;\r\n  font-size: 20px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({ searchTerm, handleSubmit, movieResults, tvResults, error, loading, updateTerm }) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Nomflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input placeholder=\"Search anything you want\" value={searchTerm} onChange={updateTerm} />\r\n    </Form>\r\n    {loading ? <Loader /> : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Show Results\">\r\n            {tvResults.map(tv => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                imageUrl={tv.poster_path}\r\n                title={tv.original_name}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text=\"error\" color=\"e74c3c\" />}\r\n        {movieResults && tvResults && movieResults.length === 0 && tvResults.length === 0 &&\r\n          <Message text=\"Nothing found\" color=\"#95a5a6\" />}\r\n      </>\r\n    )}\r\n  </Container>\r\n)\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    loading: false,\r\n    error: null,\r\n    searchTerm: \"\"\r\n  }\r\n\r\n  updateTerm = event => {\r\n    const { target :\r\n      {value}} = event;\r\n      this.setState({\r\n        searchTerm: value\r\n      })\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  }\r\n\r\n  searchByTerm = async () => {\r\n    this.setState({loading: true})\r\n    const { searchTerm } = this.state;\r\n    try {\r\n      const {\r\n        data: { results: movieResults }\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults }\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults\r\n      })\r\n    } catch {\r\n      this.setState({\r\n        error: \"can't find results.\"\r\n      })\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { movieResults, tvResults, loading, error, searchTerm } = this.state\r\n    return <SearchPresenter\r\n      movieResults={movieResults}\r\n      tvResults={tvResults}\r\n      loading={loading}\r\n      error={error}\r\n      searchTerm={searchTerm}\r\n      handleSubmit={this.handleSubmit}\r\n      updateTerm={this.updateTerm}\r\n    />\r\n  }\r\n}","import React from \"react\";\r\nimport Styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport Loader from \"Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = Styled.div`\r\n  width: 100vw;\r\n  height: calc(100vh - 50px);\r\n  position:relative;\r\n`;\r\n\r\nconst Backdrop = Styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position :center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0\r\n`;\r\n\r\nconst Content = Styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%\r\n`;\r\n\r\nconst Cover = Styled.div`\r\n  background-image:url(${props => props.bgImage});\r\n  background-size : cover;\r\n  background-position: center center;\r\n  width: 30%;\r\n  height: 100%;\r\n  margin-right: 20px;\r\n`;\r\n\r\nconst Data = Styled.div`\r\n  position: relative;\r\n  width: 70%;\r\n  padding-top: 10px;\r\n`;\r\n\r\nconst Title = Styled.h3`\r\n  font-size :30px;\r\n  font-weight: 600\r\n`;\r\n\r\nconst ItemContainer = Styled.div`\r\n  margin: 20px 0;  \r\n`;\r\n\r\nconst Item = Styled.span`\r\n  font-size: 13px;\r\n`;\r\n\r\nconst Imdb = Styled.a`\r\n`;\r\n\r\nconst Divider = Styled.span`\r\n  margin: 0 5px;\r\n`;\r\n\r\nconst OverView = Styled.p`\r\n  opacity:0.8;\r\n  font-size: 12px;\r\n  line-height: 1.5;\r\n  width: 70%;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Video = Styled.a`\r\n  font-size: 16px;\r\n  color:#e74c3c;\r\n  &:hover {\r\n    color: red;\r\n    font-size: 17px;\r\n  }\r\n`;\r\n\r\nconst CollectionContainer = Styled.div`\r\n  position: absolute;\r\n  bottom :10px;\r\n`;\r\n\r\nconst CollectionPoster = Styled.div`\r\n  background-image: url(${props => props.collectionPoster});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  width: 300px;\r\n  height: 350px;\r\n`;\r\n\r\nconst Collection = Styled.h3`\r\n  font-size: 20px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\n\r\nconst DetailPresenter = ({ loading, result, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet><title>loading</title></Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n      <Container>\r\n        <Helmet>\r\n          <title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </title>\r\n          <script src=\"https://kit.fontawesome.com/a1e9a9da77.js\" crossorigin=\"anonymous\"></script>\r\n        </Helmet>\r\n        <Backdrop\r\n          bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n        />\r\n        <Content>\r\n          <Cover bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/photo-1472491235688-bdc81a63246e.jpg\")\r\n          }\r\n          />\r\n          <Data>\r\n            <Title>\r\n              {result.original_title\r\n                ? result.original_title\r\n                : result.original_name}\r\n            </Title>\r\n            <ItemContainer>\r\n              <Item>\r\n                {result.release_date\r\n                  ? result.release_date.substring(0, 4)\r\n                  : result.first_air_date.substring(0, 4)}\r\n              </Item>\r\n              <Divider>-</Divider>\r\n              <Item>\r\n                {result.runtime ? result.runtime : result.episode_run_time[0]}min\r\n              </Item>\r\n              <Divider>-</Divider>\r\n              <Item>\r\n                {result.genres &&\r\n                  result.genres.map((genre, index) => (\r\n                    index === result.genres.length - 1\r\n                      ? genre.name\r\n                      : `${genre.name} / `\r\n                  ))\r\n                }\r\n              </Item>\r\n              <Divider>-</Divider>\r\n              <Imdb\r\n                target=\"_blank\" rel=\"noopener noreferrer\"\r\n                href={result.imdb_id && `https://www.imdb.com/title/${result.imdb_id}`}\r\n              >\r\n                <i className=\"fas fa-crown\"></i> IMDB\r\n              </Imdb>\r\n            </ItemContainer>\r\n            <OverView>\r\n              {result.overview}\r\n            </OverView>\r\n            <Video\r\n              target=\"_blank\"\r\n              href={\r\n                result.videos &&\r\n                `https://www.youtube.com/watch?v=${result.videos.results[0].key}`}\r\n            >\r\n              {result.videos ? \"Trailer (youtube)\" : null}\r\n            </Video>\r\n            \r\n            {result.belongs_to_collection\r\n              ? <CollectionContainer>\r\n                <Collection>\r\n                  {result.belongs_to_collection && `${result.belongs_to_collection.name}s`}\r\n                </Collection>\r\n                <Link to={`/collection/${result.belongs_to_collection.id}`}>\r\n                  <CollectionPoster\r\n                    collectionPoster={`https://image.tmdb.org/t/p/w300${result.belongs_to_collection.poster_path}`}\r\n                  >\r\n                  </CollectionPoster>\r\n                </Link>\r\n              </CollectionContainer>\r\n              : null}\r\n          </Data>\r\n        </Content>\r\n      </Container>\r\n    )\r\n\r\nDetailPresenter.propTypes = {\r\n  loading: PropTypes.bool.isRequired,\r\n  result: PropTypes.object,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    result: null,\r\n    error: null\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push },\r\n      location: { pathname }\r\n    } = this.props;\r\n    this.isMovie = pathname.includes(\"/movie/\");\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (this.isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({\r\n        error: \"can't find any information\"\r\n      })\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { loading, result, error } = this.state;\r\n    console.log(result);\r\n    return (\r\n      <DetailPresenter\r\n        loading={loading}\r\n        result={result}\r\n        error={error}\r\n      />\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport Styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Image = Styled.div`\r\n  background-image: url(${props => props.imageUrl});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\nconst Title = Styled.h3`\r\n  font-size: 20px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\n\r\nconst Container = Styled.div`\r\n  padding: 10px;\r\n  width: 98vw;\r\n  height: calc(100vh - 80px);\r\n  display:grid;\r\n  grid-template-columns: repeat(auto-fit, 350px);\r\n  grid-auto-rows: 350px;\r\n  gap: 60px;                                                   \r\n`;\r\n\r\nconst Content = Styled.div`\r\n  height: 100%;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst CollectionPresenter = ({ loading, error, result }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Loading...</title>\r\n    </Helmet>\r\n    {loading\r\n      ? <Loader />\r\n      : (\r\n        <Container length={result.length}>\r\n          <Helmet>\r\n            <title>{result.map(data => (\r\n              data.original_title))}\r\n            </title>\r\n          </Helmet>\r\n          {result.map(data => (\r\n            <Content key={data.id}>\r\n              <Title>{data.original_title}</Title>\r\n              <Image\r\n                imageUrl={data.poster_path && `https://image.tmdb.org/t/p/w300${data.poster_path}`}\r\n              />\r\n            </Content>\r\n          ))}\r\n          {error && <Message text=\"can't find any collection\" color=\"#e74c3c\" />}\r\n        </Container>\r\n      )}\r\n  </>\r\n)\r\n\r\nexport default CollectionPresenter;\r\n\r\nCollectionPresenter.propTypes = {\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  result: PropTypes.array\r\n}","import CollectionContainer from \"./CollectionContainer\";\r\n\r\nexport default CollectionContainer;","import React from \"react\";\r\nimport CollectionPresenter from \"./CollectionPresenter\";\r\nimport { moviesApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    error: null,\r\n    result: null\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { collectionId }\r\n      },\r\n      history: { push }\r\n    } = this.props;\r\n    const parsedId = parseInt(collectionId);\r\n    if (isNaN(parsedId)) {\r\n      push('/');\r\n    }\r\n    try {\r\n      const { data: { parts: result } } = await moviesApi.collection(parsedId);\r\n      this.setState({ result });\r\n    } catch {\r\n      this.setState({ error: \"Can't find any collections\" })\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { loading, error, result } = this.state;\r\n    return (\r\n      <CollectionPresenter\r\n        loading={loading}\r\n        error={error}\r\n        result={result}\r\n      />\r\n    )\r\n  }\r\n} ","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Header from \"Components/Header\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\nimport Collection from \"Routes/Collection\";\r\n\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/tv\" component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/tv/:id\" component={Detail} />\r\n        <Route path=\"/collection/:collectionId\" component={Collection} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);","import React from \"react\";\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { reset } from \"styled-reset\";\r\nconst GlobalStyle = createGlobalStyle`\r\n  ${reset};\r\n  a {\r\n    text-decoration :none;\r\n    color: inherit;\r\n  }\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  body {\r\n    padding-top: 50px;\r\n    font-size:12px;\r\n    background-color:rgba(20, 20, 20, 1);\r\n    color: white;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;","import React from 'react';\nimport Router from \"Components/Router\";\nimport GlobalStyle from \"Components/GlobalStyle\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n\n  //     <React.StrictMode>\n  // </React.StrictMode>,\n"],"sourceRoot":""}